#h2 embedded database settings
#jdbc.driver=org.h2.Driver
#jdbc.url=jdbc:h2:file:~/mini-web4;AUTO_SERVER=TRUE
#jdbc.username=sa
#jdbc.password=
#hibernate.dialect=org.hibernate.dialect.H2Dialect

#log4jdbc driver
#jdbc.driver=net.sf.log4jdbc.DriverSpy
#jdbc.url=jdbc:log4jdbc:h2:file:~/mini-web4;AUTO_SERVER=TRUE

#oracle database settings
#jdbc.driver=oracle.jdbc.driver.OracleDriver
#jdbc.url=jdbc:oracle:thin:@10.20.21.174:1521:nchzs
#jdbc.username=nchzs
#jdbc.password=123456
#hibernate.dialect=org.hibernate.dialect.Oracle10gDialect

#mysql database setting
jdbc.driver=com.mysql.jdbc.Driver
jdbc.url=jdbc:mysql://10.20.81.63:3306/xtkj?useUnicode=true&characterEncoding=utf-8&useSSL=false&zeroDateTimeBehavior=convertToNull
jdbc.username=root
jdbc.password=123456
#java -cp druid-1.0.16.jar com.alibaba.druid.filter.config.ConfigTools you_password
jdbc.password_decrypt=RarW2UW7H55vvf3BnInpu3EDkhU8ZwiEcjOcMY73Cefusgl4bPh1RZ9YzVSBtfXWCTslgIVhhVCQwNo44IYdWw==
jdbc.password_key=MFwwDQYJKoZIhvcNAQEBBQADSwAwSAJBAIyv2Ooym3Eyroc6U29OebKwGPqMK5EICJXN1oWZx5BbhzWTsRP36JLnYE8i+LYpAZ64vm0zInjxNr+U9XW3u68CAwEAAQ==
hibernate.dialect=org.hibernate.dialect.MySQL5InnoDBDialect

#sqlservice database setting
#jdbc.driverClassName=com.microsoft.sqlserver.jdbc.SQLServerDriver
#jdbc.url=jdbc:sqlserver://localhost:1434;database=selfStudySystem;integratedSecurity=false
#jdbc.username=sa
#jdbc.password=root

#oracle 11g database setting
#jdbc.driver=oracle.jdbc.driver.OracleDriver
#jdbc.url=jdbc:oracle:thin:@10.20.81.60:1521:HN
#jdbc.username=hn
#jdbc.password=hn123
#hibernate.dialect=org.hibernate.dialect.Oracle10gDialect

#dbcp settings
#dbcp.maxIdle=5
#dbcp.maxActive=40

#druid datasource
#参考 https://github.com/alibaba/druid/wiki/%E9%85%8D%E7%BD%AE_DruidDataSource%E5%8F%82%E8%80%83%E9%85%8D%E7%BD%AE
#初始化时建立物理连接的个数。初始化发生在显示调用init方法，或者第一次getConnection时
druid.initialSize=2
#最小连接池数量
druid.minIdle=2
#最大连接池数量
druid.maxActive=5
#获取连接时最大等待时间，单位毫秒。配置了maxWait之后，缺省启用公平锁，并发效率会有所下降，如果需要可以通过配置useUnfairLock属性为true使用非公平锁。
druid.maxWait=60000
druid.removeAbandoned = true
druid.removeAbandonedTimeout = 1800
#有两个含义：1) Destroy线程会检测连接的间隔时间 2) testWhileIdle的判断依据，详细看testWhileIdle属性的说明
druid.timeBetweenEvictionRunsMillis=60000
druid.minEvictableIdleTimeMillis=60000
#用来检测连接是否有效的sql，要求是一个查询语句。如果validationQuery为null，testOnBorrow、testOnReturn、testWhileIdle都不会起作用。
druid.validationQuery=SELECT 1 FROM DUAL
#建议配置为true，不影响性能，并且保证安全性。申请连接的时候检测，如果空闲时间大于timeBetweenEvictionRunsMillis，执行validationQuery检测连接是否有效。
druid.testWhileIdle=true
#申请连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能。
druid.testOnBorrow=false
#归还连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能
druid.testOnReturn=false
#是否缓存preparedStatement，也就是PSCache。PSCache对支持游标的数据库性能提升巨大，比如说oracle。在mysql下建议关闭。
druid.poolPreparedStatements=true
druid.maxPoolPreparedStatementPerConnectionSize=20
#属性类型是字符串，通过别名的方式配置扩展插件，常用的插件有：监控统计用的filter:stat 日志用的filter:log4j 防御sql注入的filter:wall
druid.filters=stat,wall,config

#shiro
#全局session超时时间 1000*30*60milliseconds = 30 分钟（1800000）
shiro.session.globalSessionTimeout=1800000
#session验证时间间隔(即验证会话是否还有效) 1000*60*60milliseconds = 1小时（3600000）
shiro.session.validation.interval=3600000
#session 缓存的名字
shiro.active.session.cacheName=shiro-activeSessionCache
shiro.uid.cookie.name=uid
#在maven profile中根据环境配置
#如果是ip/localhost 此处domain为空（chrome不能设置）
shiro.uid.cookie.domain=
#设置Cookie的路径，默认空，即存储在域名根下；
shiro.uid.cookie.path=/
#如果设置为true，则客户端不会暴露给客户端脚本代码，使用HttpOnly cookie有助于减少某些类型的跨站点脚本攻击;
#此特性需要实现了Servlet 2.5 MR6及以上版本的规范的Servlet容器支持；
shiro.uid.cookie.httpOnly=true
#设置Cookie的过期时间，秒为单位，默认-1表示关闭浏览器时过期Cookie； 2592000 30天
shiro.uid.cookie.maxAge=-1
#是否启用/禁用Session Id Cookie，默认是启用的；如果禁用后将不会设置Session Id Cookie，即默认使用了Servlet容器的JSESSIONID，且通过URL重写（URL中的“;JSESSIONID=id”部分）保存Session Id。
shiro.sessionManager.sessionIdCookieEnabled=true
# rememeber me cookie 名字
shiro.uid.rememeberMe.cookie.name=rememberMe
#默认 rememberMe cookie 60 * 60 * 24 * 7 （7天）
shiro.uid.rememeberMe.cookie.maxAge=604800
#rememberme cookie加密的密钥 建议每个项目都不一样 默认AES算法 密钥长度（128 256 512 位）
#密钥生成java代码（直接拷贝到main允许即可） KeyGenerator keygen = KeyGenerator.getInstance("AES");SecretKey deskey = keygen.generateKey();System.out.println(Base64.encodeToString(deskey.getEncoded()));
shiro.uid.rememeberMe.cookie.base64.cipherKey=4AvVhmFLUs0KTA3Kprsdag==
#登录地址
shiro.login.url=/login
#没有授权地址
shiro.unauthorizedUrl=/unauthorized
#默认的登录成功页
shiro.default.success.url=/index

#文件导出
export.folder=F\:\\Backup
export.file=dict.xls

# Redis settings
#redis.host=192.168.20.101
#redis.port=6380
#redis.pass=foobared
redis.host=10.20.81.63
redis.port=6379
redis.pass=123456
redis.db=0
redis.timeout=3000

#redis分片连接方式
shardredis.host1=redis://userinfo:123456@10.20.81.63:6379/0
shardredis.host2=redis://userinfo:123456@10.20.81.63:6380/0

#最大能够保持idel状态的对象数  
redis.maxIdle=500
redis.minIdle=300
#最大连接数
redis.maxActive=600
#设置最大阻塞时间，记住是毫秒数milliseconds
redis.maxWait=1000
#当调用borrow Object方法时，是否进行有效性检查  
redis.testOnBorrow=true
